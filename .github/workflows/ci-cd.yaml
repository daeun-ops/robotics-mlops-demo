name: CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

# CodeQL, SLSA, provenance 등과 호환되도록 공통 권한을 명시
permissions:
  contents: read
  id-token: write
  security-events: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-validate:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('training-mlflow/requirements.txt', 'model-server/app/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (make build)
        run: make build

      - name: Lint
        run: make lint

      - name: Unit tests
        run: make test

      - name: K8s manifest schema validation (kubeconform)
        run: make kube-validate

      # 아래 3개 step은 클러스터 크레덴셜이 있을 때만 실행
      - name: Setup kubectl (for server-side dry-run)
        if: ${{ secrets.KUBE_CONFIG_DATA != '' }}
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.30.0"

      - name: Configure kubeconfig
        if: ${{ secrets.KUBE_CONFIG_DATA != '' }}
        run: |
          mkdir -p $HOME/.kube
          echo "${KUBE_CONFIG_DATA}" | base64 -d > $HOME/.kube/config
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Server-side dry-run against cluster
        if: ${{ secrets.KUBE_CONFIG_DATA != '' }}
        run: make k8s-dryrun
